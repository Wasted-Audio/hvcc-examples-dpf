name: build

on:
  push:
  repository_dispatch:
    types: [nightly]

env:
  HVCC_VERSION: 1499fda6e3a6ae5b8c0ecd29df05d9bc5e72dac7

jobs:
  linux-x86_64:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: python -m pip install -U pip

      - name: Install pinned hvcc
        run: |
          python -m pip install git+https://github.com/Wasted-Audio/hvcc.git@${{ env.HVCC_VERSION }}
        if: ${{ !github.event.client_payload.nightly }}
      - name: Install develop hvcc
        run: |
          python -m pip install git+https://github.com/Wasted-Audio/hvcc.git@${{ github.event.client_payload.branch }}
        if: ${{ github.event.client_payload.nightly }}

      - name: Build plugins
        run: |
          make WITH_LTO=true -j $(nproc)

      - name: Set sha8 (non-release)
        if: startsWith(github.ref, 'refs/tags/') != true
        id: slug1
        run: echo "action_tag=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV
      - name: Set tag (release)
        if: startsWith(github.ref, 'refs/tags/')
        id: slug2
        run: echo "action_tag=$(echo ${{ github.ref_name }})" >> $GITHUB_ENV

      - name: Pack binaries
        run: |
          make binmove
          tar -c -h -z -f ${{ github.event.repository.name }}-linux-x86_64-${{ github.event.pull_request.number || env.action_tag }}.tar.gz bin/ README.md LICENSE
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-linux-x86_64-${{ github.event.pull_request.number || env.action_tag }}
          path: |
            *.tar.gz
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            *.tar.gz

  win64:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: python -m pip install -U pip

      - name: Install pinned hvcc
        run: |
          python -m pip install git+https://github.com/Wasted-Audio/hvcc.git@${{ env.HVCC_VERSION }}
        if: ${{ !github.event.client_payload.nightly }}
      - name: Install nightly hvcc
        run: |
          python -m pip install git+https://github.com/Wasted-Audio/hvcc.git@${{ github.event.client_payload.branch }}
        if: ${{ github.event.client_payload.nightly }}

      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -yqq binutils-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64 wine-stable

      - name: Build win64 cross-compiled plugins
        env:
          CC: x86_64-w64-mingw32-gcc
          CXX: x86_64-w64-mingw32-g++
          EXE_WRAPPER: wine
          PKG_CONFIG: "false"
          WINEDEBUG: "-all"
        run: |
          make WITH_LTO=true -j $(nproc)

      - name: Set sha8 (non-release)
        if: startsWith(github.ref, 'refs/tags/') != true
        id: slug1
        run: echo "action_tag=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV
      - name: Set tag (release)
        if: startsWith(github.ref, 'refs/tags/')
        id: slug2
        run: echo "action_tag=$(echo ${{ github.ref_name }})" >> $GITHUB_ENV

      - name: Pack binaries
        run: |
          make binmove
          tar -c -h -z -f ${{ github.event.repository.name }}-win64-${{ github.event.pull_request.number || env.action_tag }}.tar.gz bin/ README.md LICENSE
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-win64-${{ github.event.pull_request.number || env.action_tag }}
          path: |
            *.tar.gz
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            *.tar.gz

  macos-universal:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - run: python -m pip install -U pip

      - name: Install pinned hvcc
        run: |
          python -m pip install git+https://github.com/Wasted-Audio/hvcc.git@${{ env.HVCC_VERSION }}
        if: ${{ !github.event.client_payload.nightly }}
      - name: Install nightly hvcc
        run: |
          python -m pip install git+https://github.com/Wasted-Audio/hvcc.git@${{ github.event.client_payload.branch }}
        if: ${{ github.event.client_payload.nightly }}

      - name: Build macOS universal plugins
        env:
          CFLAGS: -arch x86_64 -arch arm64 -DMAC_OS_X_VERSION_MAX_ALLOWED=MAC_OS_X_VERSION_10_12 -mmacosx-version-min=10.12 -mtune=generic -msse -msse2
          CXXFLAGS: -arch x86_64 -arch arm64 -DMAC_OS_X_VERSION_MAX_ALLOWED=MAC_OS_X_VERSION_10_12 -mmacosx-version-min=10.12 -mtune=generic -msse -msse2
          LDFLAGS: -arch x86_64 -arch arm64 -mmacosx-version-min=10.12
        run: |
          make NOOPT=true WITH_LTO=true -j $(sysctl -n hw.logicalcpu)
          ./dpf/utils/package-osx-bundles.sh

      - name: Set sha8 (non-release)
        if: startsWith(github.ref, 'refs/tags/') != true
        id: slug1
        run: echo "action_tag=$(echo ${{ github.sha }} | cut -c1-8)" >> $GITHUB_ENV
      - name: Set tag (release)
        if: startsWith(github.ref, 'refs/tags/')
        id: slug2
        run: echo "action_tag=$(echo ${{ github.ref_name }})" >> $GITHUB_ENV

      - name: Pack binaries
        run: |
          make binmove
          tar -c -h -z -f ${{ github.event.repository.name }}-macOS-universal-${{ github.event.pull_request.number || env.action_tag }}.tar.gz bin/ README.md LICENSE
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-macOS-universal-${{ github.event.pull_request.number || env.action_tag }}
          path: |
            *.tar.gz
      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            *.tar.gz
